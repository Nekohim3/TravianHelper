<Application x:Class="TravianHelper.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TravianHelper">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="UI/WindowStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#ccc"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#ccc"/>
            <Setter Property="Background" Value="#333"/>
            </Style>
            <Style TargetType="ListView" x:Key="ListViewStyle">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#ccc"/>
                <Setter Property="Background" Value="#222"/>
                <Setter Property="BorderBrush" Value="#777"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border BorderThickness="1" x:Name="LVBorder" Background="#222" BorderBrush="#955">
                                <ScrollViewer VerticalScrollBarVisibility="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="LVBorder" Property="BorderBrush" Value="#555"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListViewItem" x:Key="ListViewItemStyle">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3"/>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BorderForSelect" Background="#55777777" Grid.ColumnSpan="3" Visibility="Collapsed" Margin="-5,0,-5,0"/>
                                <Ellipse x:Name="StateCircle" Grid.Column="1" Width="10" Height="10"/>
                                <TextBlock Grid.Column="2" Text="{Binding Comment}" Margin="3,0,0,0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="BorderForSelect" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding State}" Value="Finished">
                                    <Setter TargetName="StateCircle" Property="Fill" Value="#22cc22"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="InProgress">
                                    <Setter TargetName="StateCircle" Property="Fill" Value="#00ffff"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="Error">
                                    <Setter TargetName="StateCircle" Property="Fill" Value="#ff3333"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="Queue">
                                    <Setter TargetName="StateCircle" Property="Fill" Value="#777"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ListViewItem">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid Margin="5,1,5,1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BorderForSelect" Background="#55777777"  Visibility="Collapsed" Margin="-5,0,-5,0"/>
                            <TextBlock Grid.Column="0" Text="{Binding }" Margin="0" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="BorderForSelect" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" Background="#222" BorderThickness="1" BorderBrush="#955">
                                    <Grid x:Name="CheckMark">
                                        <Line StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" x:Name="CheckMark1" X1="2" Y1="2" X2="9" Y2="9" Stroke="#955" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"/>
                                        <Line StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"  x:Name="CheckMark2" X1="2" Y1="9" X2="9" Y2="2" Stroke="#955" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"/>
                                    </Grid>
                                    <!--<Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="True" Stroke="#955" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0" RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"/>-->
                                </Border>
                            </BulletDecorator.Bullet>
                            <TextBlock x:Name="TB" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{TemplateBinding Content}" Foreground="#ccc"/>
                            <!--<ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>-->
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#f55" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#f55" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#00000000" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#55777777" />
                                <Setter TargetName="TB" Property="Foreground" Value="#777"/>
                                <Setter TargetName="CheckMark1" Property="Stroke" Value="#777"/>
                                <Setter TargetName="CheckMark2" Property="Stroke" Value="#777"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#ccc"/>
            <Setter Property="BorderBrush" Value="#955"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" BorderThickness="0" CornerRadius="0" Background="Transparent">
                                <ContentPresenter Margin="0,3,0,1" ContentSource="Header" RecognizesAccessKey="True" TextBlock.FontWeight="Bold"/>
                            </Border>
                            <Border Grid.Row="1" SnapsToDevicePixels="True" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0"
                                    Padding="{TemplateBinding Padding}"
                                    Margin="1,0,1,1">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#ffcccccc"/>
            <Setter Property="Background" Value="#222"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#777" BorderThickness="1" x:Name="BBorder">
                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" x:Name="Box"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BBorder" Property="Background" Value="#555"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="BBorder" Property="Background" Value="#000"/>
                                <Setter TargetName="BBorder" Property="BorderBrush" Value="#955"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Box" Property="Foreground" Value="#777"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" BorderThickness="1" Background="#222" BorderBrush="#955"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 5 5 L 10 0 Z" Fill="#955" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <!--<Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundHighlightedShipBrush}" />-->
                    <Setter TargetName="Border" Property="BorderBrush" Value="Red" />
                    <!--<Setter TargetName="BorderForText" Property="BorderBrush" Value="{DynamicResource BorderHighlightedShipBrush}" />-->
                    <!--<Setter TargetName="Arrow" Property="Fill" Value="White" />-->
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <!--<Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundNormalShipBrush}" />-->
                    <Setter TargetName="Border" Property="BorderBrush" Value="Red" />
                    <!--<Setter TargetName="BorderForText" Property="BorderBrush" Value="{DynamicResource BorderSelectedShipBrush}" />-->
                    <!--<Setter TargetName="Arrow" Property="Fill" Value="White" />-->
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <!--<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource LightBackgroundEnableShipBrush}" />-->
                    <Setter TargetName="Border" Property="Background" Value="Red" />
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="Red" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="0,1,0,1" />
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid >
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Focusable="false" ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" 
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="5,0,23,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"  Template="{StaticResource ComboBoxTextBox}" 
                                     HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,23,0"
                                     Focusable="True" Background="Transparent" Visibility="Hidden" Foreground="#ccc"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MaxWidth="600" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#222" BorderThickness="1" BorderBrush="#955"/>
                                    <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ccc"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="#000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true" BorderThickness="1,0"
                                BorderBrush="#955">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Foreground" Value="#ccc"/>
                                <Setter TargetName="Border" Property="Background" Value="#55777777"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Foreground" Value="#ccc"/>
                                <Setter TargetName="Border" Property="Background" Value="#55777777"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ccc"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Separator}"
               BasedOn="{StaticResource {x:Type Separator}}">
            <Setter Property="Margin" Value="6,0,6,0"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <TransformGroup>
                        <TransformGroup.Children>
                            <TransformCollection>
                                <RotateTransform Angle="90"/>
                            </TransformCollection>
                        </TransformGroup.Children>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="BorderBrush" Value="#555" />
            <Setter Property="Background" Value="#222" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalGridLinesBrush" Value="#55905050" />
            <Setter Property="VerticalGridLinesBrush" Value="#55905050" />
            <!--<Setter Property="Foreground" Value="Black" />-->
            <Setter Property="ScrollViewer.CanContentScroll"  Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Grid>
                            <Border x:Name="border" SnapsToDevicePixels="True" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                                <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" >
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" MinHeight="25"/>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                  Grid.Column="0"
                                                  Visibility="{Binding HeadersVisibility, 
                                                      ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                      Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                      RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                                <Border Grid.Column="1" Background="#fff"/>

                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"                                          
                                          Grid.Row="1"
                                          CanContentScroll="{TemplateBinding CanContentScroll}" />

                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                             Grid.Column="1"
                                             Grid.Row="1"
                                             Orientation="Vertical"
                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                             Maximum="{TemplateBinding ScrollableHeight}"
                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                             Value="{Binding VerticalOffset, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}"/>

                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                               Grid.Column="0" Grid.Row="2"
                                               Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"
                                               Maximum="{TemplateBinding ScrollableWidth}"
                                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                               Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                                <Border Grid.Column="1" Grid.Row="2" Background="#fff"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping"  Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll"  Value="false" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Border x:Name="columnHeaderBorder" BorderThickness="0" Padding="0" 
                                BorderBrush="#fff"
                               Background="#333" >
                                <Grid HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="2,1"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="columnHeaderBorder" Property="Background" Value="#555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="#fff" />
            <Setter Property="Foreground" Value="#ccc"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border" BorderBrush="Transparent"  Background="Transparent" Style="{DynamicResource CellEmptyBorder}"
                                SnapsToDevicePixels="True" >
                            <ContentPresenter HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsReadOnly" Value="False">
                                <Setter Property="Foreground" Value="#ccc" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="#222" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <DataGridCellsPresenter 
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </SelectiveScrollingGrid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="DGR_Border" Property="Background" Value="#55777777"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
